"s_init() {\n"
"	TZ=GMT; export TZ;\n"
"	LC_ALL=POSIX; export LC_ALL;\n"
"	\n"
"	if test -z \"$1\"; then\n"
"		s_ROOT=\"$HOME\";\n"
"	else\n"
"		s_ROOT=\"$1\";\n"
"	fi\n"
"	shift\n"
"	if test \"$1\" = \"stable\"; then\n"
"	    s_STABLE=\"\";\n"
"	fi\n"
"	\n"
"	s_TMP=\"\";\n"
"	i=0;\n"
"	while test $i -lt 10000; do\n"
"		if mkdir /tmp/._shfs_.$i 2>/dev/null; then\n"
"			s_TMP=/tmp/._shfs_.$i/;\n"
"			break;\n"
"		fi;\n"
"		i=`expr $i + 1`;\n"
"	done;\n"
"	s_HEAD=\"\";\n"
"	if test \"$s_TMP\"; then\n"
"		if echo \"x\" | head -c 1 >/dev/null 2>&1; then\n"
"			s_HEAD=1;\n"
"		fi\n"
"	fi\n"
"	s_READLINK=\"\";\n"
"	if type readlink >/dev/null 2>&1; then\n"
"		s_READLINK=1;\n"
"	fi\n"
"	echo $s_COMPLETE;\n"
"}\n"
"s_finish () {\n"
"	if test \"$s_TMP\"; then\n"
"		rm -rf $s_TMP;\n"
"	fi\n"
"	echo $s_COMPLETE;\n"
"}\n"
"s_lsdir () {\n"
"	if ls -lan$s_STABLE \"$s_ROOT$1\" 2>/dev/null; then\n"
"		echo $s_COMPLETE;\n"
"	elif test -d \"$s_ROOT$1\"; then\n"
"		if ls \"$s_ROOT$1\" >/dev/null 2>&1; then\n"
"			echo $s_COMPLETE;\n"
"		else\n"
"			echo $s_EPERM;\n"
"		fi\n"
"	else\n"
"		echo $s_ENOENT;\n"
"	fi;\n"
"}\n"
"s_stat () {\n"
"	if test -z \"`ls -1d \"$s_ROOT$1\" 2>/dev/null`\"; then\n"
"	    echo $s_ENOENT;\n"
"	elif ls -land$s_STABLE \"$s_ROOT$1\" 2>/dev/null; then\n"
"		echo $s_COMPLETE;\n"
"	else\n"
"		echo $s_EPERM;\n"
"	fi;\n"
"}\n"
"s_open () {\n"
"	ok=0;\n"
"	if test x$2 = xR -o x$2 = xRW; then\n"
"		if test -r \"$s_ROOT$1\"; then\n"
"			ok=1;\n"
"		fi\n"
"	fi;\n"
"	if test x$2 = xW -o x$2 = xRW; then\n"
"		if test -w \"$s_ROOT$1\"; then\n"
"			ok=1;\n"
"		else\n"
"			ok=0;\n"
"		fi\n"
"	fi;\n"
"	if test $ok = 1; then\n"
"		if test -s \"$s_ROOT$1\"; then\n"
"			echo $s_COMPLETE;\n"
"		elif test `dd if=\"$s_ROOT$1\" bs=1 count=1 2>/dev/null|wc -c` -eq 0; then\n"
"			echo $s_COMPLETE;\n"
"		else \n"
"			echo $s_NOTEMPTY;\n"
"		fi\n"
"	elif test -f \"$s_ROOT$1\"; then\n"
"		echo $s_EPERM;\n"
"	else\n"
"		echo $s_ENOENT;\n"
"	fi\n"
"}\n"
"s_read () {\n"
"	if test \"$3\" = 0; then\n"
"		if test -r \"$s_ROOT$1\"; then\n"
"			echo $s_PRELIM; echo $s_COMPLETE;\n"
"		else\n"
"			echo $s_EPERM;\n"
"		fi\n"
"	fi\n"
"	echo $s_PRELIM;\n"
"	( dd if=\"$s_ROOT$1\" bs=$4 skip=$5 count=$6 conv=sync 2>&1 1>&3 | grep \"$6+0\" >/dev/null || dd if=/dev/zero bs=$4 count=$6 conv=sync 2>&1 1>&3 | grep \"$6+0\" >/dev/null ) 3>&1;\n"
"	echo $s_COMPLETE;\n"
"}\n"
"s_sread () {\n"
"	if test -z \"$s_TMP\"; then\n"
"		return $s_EPERM;\n"
"	elif test \"$3\" = 0; then\n"
"		if test -r \"$s_ROOT$1\"; then\n"
"			echo $s_PRELIM; echo $s_COMPLETE;\n"
"		else\n"
"			echo $s_EPERM;\n"
"		fi\n"
"	elif >\"$s_TMP._shfs_$$_$7\" 2>/dev/null; then\n"
"		if x=`dd if=\"$s_ROOT$1\" bs=$4 skip=$5 count=$6 2>/dev/null|tee \"$s_TMP._shfs_$$_$7\"|wc -c`; then\n"
"			echo $s_PRELIM;\n"
"			echo $x;\n"
"			cat \"$s_TMP._shfs_$$_$7\" 2>/dev/null;\n"
"			echo $s_COMPLETE;\n"
"		elif test -f \"$s_ROOT$1\"; then\n"
"			echo $s_EPERM;\n"
"		else\n"
"			echo $s_ENOENT;\n"
"		fi\n"
"		rm -f \"$s_TMP._shfs_$$_$7\";\n"
"	elif test -f \"$s_ROOT$1\"; then\n"
"		echo $s_EPERM;\n"
"	else\n"
"		echo $s_ENOENT;\n"
"	fi\n"
"}\n"
"s_write () {\n"
"	if test \"$s_HEAD\" && >\"$s_TMP._shfs_$$_$6\" 2>/dev/null; then\n"
"		echo $s_PRELIM;\n"
"		if test \"$s_HEAD\"; then\n"
"			head -c $3 >\"$s_TMP._shfs_$$_$6\" 2>/dev/null;\n"
"			result=$?;\n"
"		fi\n"
"		if test $result -eq 0; then\n"
"			if dd if=\"$s_TMP._shfs_$$_$6\" of=\"$s_ROOT$1\" bs=$4 seek=$5 conv=notrunc 2>/dev/null; then\n"
"				echo $s_COMPLETE;\n"
"			elif test -w \"$s_ROOT$1\"; then\n"
"				echo $s_ENOSPC;\n"
"			else\n"
"				echo $s_EPERM;\n"
"			fi\n"
"		else\n"
"			echo $s_ENOSPC; dd of=/dev/null bs=1 count=$3 2>/dev/null;\n"
"		fi\n"
"		rm -f \"$s_TMP._shfs_$$_$6\" 2>/dev/null;\n"
"	elif test -w \"$s_ROOT$1\"; then\n"
"		echo $s_PRELIM;\n"
"		if test \"$3\" = 0; then\n"
"			echo $s_COMPLETE;\n"
"		elif dd of=\"$s_ROOT$1\" bs=1 seek=$2 count=$3 conv=notrunc 2>/dev/null; then\n"
"			echo $s_COMPLETE;\n"
"		else\n"
"			echo $s_ENOSPC; dd of=/dev/null bs=1 count=$3 2>/dev/null;\n"
"		fi\n"
"	fi\n"
"}\n"
"s_mkdir () {\n"
"	if mkdir \"$s_ROOT$1\" 2>/dev/null; then\n"
"		echo $s_COMPLETE;\n"
"	else\n"
"		echo $s_EPERM;\n"
"	fi\n"
"}\n"
"s_rmdir () {\n"
"	if test -d \"$s_ROOT$1\"; then\n"
"		if rmdir \"$s_ROOT$1\" 2>/dev/null; then\n"
"			echo $s_COMPLETE;\n"
"		else\n"
"			echo $s_EPERM;\n"
"		fi\n"
"	else\n"
"		echo $_ENOENT;\n"
"	fi\n"
"}\n"
"s_mv () {\n"
"	if mv -f \"$s_ROOT$1\" \"$s_ROOT$2\" 2>/dev/null; then\n"
"		echo $s_COMPLETE;\n"
"	elif test -f \"$s_ROOT$1\"; then\n"
"		echo $s_EPERM;\n"
"	else\n"
"		echo $s_ENOENT;\n"
"	fi\n"
"}\n"
"s_rm () {\n"
"	if rm -f \"$s_ROOT$1\" 2>/dev/null; then\n"
"		echo $s_COMPLETE;\n"
"	elif test -f \"$s_ROOT$1\"; then\n"
"		echo $s_EPERM;\n"
"	else\n"
"		echo $s_ENOENT;\n"
"	fi\n"
"}\n"
"s_creat () {\n"
"        if ( >\"$s_ROOT$1\"; chmod $2 \"$s_ROOT$1\" ) 2>/dev/null; then\n"
"	        echo $s_COMPLETE;\n"
"	else\n"
"		echo $s_EPERM;\n"
"	fi\n"
"}\n"
"s_ln () {\n"
"        if ln -f \"$s_ROOT$1\" \"$s_ROOT$2\" 2>/dev/null; then\n"
"		echo $s_COMPLETE;\n"
"	else\n"
"		echo $s_EPERM;\n"
"	fi\n"
"}\n"
"s_sln () {\n"
"	if ln -s -f \"$1\" \"$s_ROOT$2\" 2>/dev/null; then\n"
"		echo $s_COMPLETE;\n"
"	else\n"
"		echo $s_EPERM;\n"
"	fi\n"
"}\n"
"s_readlink () {\n"
"	if test \"$s_READLINK\"; then\n"
"		if readlink \"$s_ROOT$1\" 2>/dev/null; then\n"
"			echo $s_COMPLETE;\n"
"		else\n"
"			echo $s_EPERM;\n"
"		fi\n"
"	else\n"
"		if ls -ld \"$s_ROOT$1\" 2>/dev/null|sed \"s/.*-> \\(.*\\)/\\1/\" 2>/dev/null; then\n"
"			echo $s_COMPLETE;\n"
"		else\n"
"			echo $s_EPERM;\n"
"		fi\n"
"	fi\n"
"}\n"
"s_chmod () {\n"
"	if chmod $2 \"$s_ROOT$1\" 2>/dev/null; then\n"
"		echo $s_COMPLETE;\n"
"	elif test -f \"$s_ROOT$1\"; then\n"
"		echo $s_EPERM;\n"
"	else\n"
"		echo $s_ENOENT;\n"
"	fi\n"
"}\n"
"s_chown () {\n"
"	if chown $2 \"$s_ROOT$1\" 2>/dev/null; then\n"
"		echo $s_COMPLETE;\n"
"	elif test -f \"$s_ROOT$1\"; then\n"
"		echo $s_EPERM;\n"
"	else\n"
"		echo $s_ENOENT;\n"
"	fi\n"
"}\n"
"s_chgrp () {\n"
"	if chgrp $2 \"$s_ROOT$1\" 2>/dev/null; then\n"
"		echo $s_COMPLETE;\n"
"	elif test -f \"$s_ROOT$1\"; then\n"
"		echo $s_EPERM;\n"
"	else\n"
"		echo $s_ENOENT;\n"
"	fi\n"
"}\n"
"s_trunc () {\n"
"	if test \"$3\" = 0; then\n"
"		if ( >\"$s_ROOT$1\" ) 2>/dev/null; then\n"
"			echo $s_COMPLETE;\n"
"		elif test -f \"$s_ROOT$1\"; then\n"
"			echo $s_EPERM;\n"
"		else\n"
"			echo $s_ENOENT;\n"
"		fi\n"
"	elif dd if=/dev/zero of=\"$s_ROOT$1\" bs=$2 seek=$3 count=0 2>/dev/null; then\n"
"		echo $s_COMPLETE;\n"
"	elif test -f \"$s_ROOT$1\"; then\n"
"		echo $s_EPERM;\n"
"	else\n"
"		echo $s_ENOENT;\n"
"	fi\n"
"}\n"
"s_settime () {\n"
"	if test -e \"$s_ROOT$1\"; then\n"
"		if TZ=UTC touch -$2 -t $3 \"$s_ROOT$1\" 2>/dev/null; then\n"
"			echo $s_COMPLETE;\n"
"		else\n"
"			echo $s_EPERM;\n"
"		fi\n"
"	else\n"
"		echo $s_ENOENT;\n"
"	fi\n"
"}\n"
"s_statfs () {\n"
"	LC_ALL=POSIX df -k \"$s_ROOT\" 2>/dev/null | (\n"
"		xa=0; xb=0; xc=0;\n"
"		while read x a b c z; do\n"
"			xa=$a; xb=$b; xc=$c;\n"
"		done;\n"
"		echo $xa $xb $xc\n"
"	);\n"
"	echo $s_COMPLETE;\n"
"}\n"
"s_ping () {\n"
"	echo $s_PRELIM;\n"
"	echo $1;\n"
"	echo $s_NOP;\n"
"}\n"
"s_PRELIM=\"### 100\";\n"
"s_COMPLETE=\"### 200\";\n"
"s_NOP=\"### 201\";\n"
"s_NOTEMPTY=\"### 202\";\n"
"s_CONTINUE=\"### 300\";\n"
"s_TRANSIENT=\"### 400\";\n"
"s_ERROR=\"### 500\";\n"
"s_EPERM=\"### 501\";\n"
"s_ENOSPC=\"### 502\";\n"
"s_ENOENT=\"### 503\";\n"
"echo $s_COMPLETE;\n"
