"use POSIX qw(mktime);\n"
"use Fcntl;\n"
"use IO::File;\n"
"my $ROOT;\n"
"my ($PRELIM) = (\"### 100\\n\");\n"
"my ($COMPLETE, $NOP, $NOTEMPTY) = (\"### 200\\n\", \"### 201\\n\", \"### 202\\n\");\n"
"my ($CONTINUE, $TRANSIENT) = (\"### 300\\n\", \"### 400\\n\");\n"
"my ($ERROR, $EPERM, $ENOSPC, $ENOENT) = (\"### 500\\n\", \"### 501\\n\", \"### 502\\n\", \"### 503\\n\");\n"
"my $STABLE = \"\";\n"
"my $PRESERVE = 0;\n"
"sub s_init()\n"
"{\n"
"	my $args = $_[0];\n"
"	my $s;\n"
"	$ENV{'\\''TZ'\\''} = '\\''GMT'\\'';\n"
"	$ENV{'\\''LC_ALL'\\''} = '\\''POSIX'\\'';\n"
"	$s = shift @$args;\n"
"	if ($s eq '\\'''\\'') {\n"
"		$ROOT = $ENV{'\\''HOME'\\''};\n"
"	} else {\n"
"		$ROOT = \"$s\";\n"
"	}\n"
"	while (($s = shift @$args)) {\n"
"		if ($s eq \"stable\") {\n"
"		        $STABLE = \"\";\n"
"		} elsif ($s eq \"preserve\") {\n"
"			$PRESERVE = 1;\n"
"		}\n"
"	}\n"
"	print($COMPLETE);\n"
"}\n"
"sub s_finish()\n"
"{\n"
"	print($COMPLETE);\n"
"}\n"
"sub s_lsdir()\n"
"{\n"
"	my $args = $_[0];\n"
"	my $dir = $$args[0];\n"
"	my $result;\n"
"	if (not -d \"$ROOT$dir\") {\n"
"		print($ENOENT);\n"
"		return;\n"
"	}\n"
"	if (system(\"ls\", \"-lan$STABLE\", \"$ROOT$dir\") != 0) {\n"
"		print($EPERM);\n"
"		return;\n"
"	}\n"
"	print($COMPLETE);\n"
"}\n"
"sub s_stat()\n"
"{\n"
"	my $args = $_[0];\n"
"	my $dir = $$args[0];\n"
"	my $result;\n"
"	if ((not -e \"$ROOT$dir\") && (not -l \"$ROOT$dir\")) {\n"
"		print($ENOENT);\n"
"		return;\n"
"	}\n"
"	if (system(\"ls\", \"-land$STABLE\", \"$ROOT$dir\") != 0) {\n"
"	    print($EPERM);\n"
"	    return;\n"
"	}\n"
"	print($COMPLETE);\n"
"}\n"
"sub s_open()\n"
"{\n"
"	my $args = $_[0];\n"
"	my ($file, $mode) = ($$args[0], $$args[1]);\n"
"	my $openmode = 0;\n"
"	my ($data, $result);\n"
"	$openmode = O_RDONLY if ($mode eq \"R\");\n"
"	$openmode = O_WRONLY if ($mode eq \"W\");\n"
"	$openmode = O_RDWR if ($mode eq \"RW\");\n"
"	if (not sysopen(FD, \"$ROOT$file\", $openmode)) {\n"
"		if (-e \"$ROOT$file\") {\n"
"			print($EPERM);\n"
"		} else {\n"
"			print($ENOENT);\n"
"		}\n"
"		return;\n"
"	}\n"
"	if (-s \"$ROOT$file\") {\n"
"		print($COMPLETE);\n"
"		close FD;\n"
"		return;\n"
"	}\n"
"	if (sysread(FD, $data, 1) == 1) {\n"
"		print($NOTEMPTY);\n"
"	} else {\n"
"		print($COMPLETE);\n"
"	}\n"
"	close FD;\n"
"}\n"
"sub s_read()\n"
"{\n"
"	my $args = $_[0];\n"
"	my ($file, $off, $size) = ($$args[0], $$args[1], $$args[2]);\n"
"	my ($result, $data, $o, $s);\n"
"	if (not sysopen(FD, \"$ROOT$file\", O_RDONLY)) {\n"
"		if (-e \"$ROOT$file\") {\n"
"			print($EPERM);\n"
"		} else {\n"
"			print($COMPLETE);\n"
"		}\n"
"		return;\n"
"	}\n"
"	sysseek(FD, $off, 0);\n"
"	$o = 0; $s = $size;\n"
"	$result = sysread(FD, $data, $size, 0);\n"
"	while (defined $result and $result > 0) {\n"
"		$o += $result; $s -= $result;\n"
"		$result = sysread(FD, $data, $s, $o);\n"
"	}\n"
"	close FD;\n"
"	if (defined $result) {\n"
"select STDOUT; $| = 0;\n"
"		print($PRELIM);\n"
"		print(\"$data\".\"\\000\"x($size-$o));\n"
"select STDOUT; $| = 1;\n"
"		print($COMPLETE);\n"
"	} else {\n"
"		print($ERROR);\n"
"	}\n"
"}\n"
"sub s_sread()\n"
"{\n"
"	my $args = $_[0];\n"
"	my ($file, $off, $size) = ($$args[0], $$args[1], $$args[2]);\n"
"	my ($result, $data, $o, $s);\n"
"	if (not sysopen(FD, \"$ROOT$file\", O_RDONLY)) {\n"
"		if (-e \"$ROOT$file\") {\n"
"			print($EPERM);\n"
"		} else {\n"
"			print($COMPLETE);\n"
"		}\n"
"		return;\n"
"	}\n"
"	sysseek(FD, $off, 0);\n"
"	$o = 0; $s = $size;\n"
"	$result = sysread(FD, $data, $size, 0);\n"
"	while (defined $result and $result > 0) {\n"
"		$o += $result; $s -= $result;\n"
"		$result = sysread(FD, $data, $s, $o);\n"
"	}\n"
"	close FD;\n"
"	if (defined $result) {\n"
"		print($PRELIM);\n"
"		print(\"$o\");\n"
"		print(\"$data\");\n"
"		print($COMPLETE);\n"
"	} else {\n"
"		print($ERROR);\n"
"	}\n"
"}\n"
"sub s_write()\n"
"{\n"
"	my $args = $_[0];\n"
"	my ($file, $off, $size) = ($$args[0], $$args[1], $$args[2]);\n"
"	my ($result, $data, $o, $s);\n"
"	if (not sysopen(FD, \"$ROOT$file\", O_WRONLY)) {\n"
"		if (-e \"$ROOT$file\") {\n"
"			print($EPERM);\n"
"		} else {\n"
"			print($COMPLETE);\n"
"		}\n"
"		return;\n"
"	}\n"
"	sysseek(FD, $off, 0);\n"
"	print($PRELIM);\n"
"	$o = 0; $s = $size;\n"
"	$result = sysread(STDIN, $data, $size);\n"
"	while (defined $result and $result > 0) {\n"
"		$o += $result; $s -= $result;\n"
"		$result = sysread(STDIN, $data, $s, $o);\n"
"	}\n"
"	if (not defined $result) {\n"
"		print($ERROR);\n"
"		close FD;\n"
"		return;\n"
"	}\n"
"	\n"
"	$o = 0; $s = $size;\n"
"	$result = syswrite(FD, $data, $size, 0);\n"
"	while (defined $result and $result > 0 and $o+$result < $size) {\n"
"		$o += $result; $s -= $result;\n"
"		$result = syswrite(FD, $data, $s, $o);\n"
"	}\n"
"	close FD;\n"
"	if (defined $result) {\n"
"		print($COMPLETE);\n"
"	} else {\n"
"		print($ERROR);\n"
"	}\n"
"}\n"
"sub s_mkdir()\n"
"{\n"
"	my $args = $_[0];\n"
"	my $dir = $$args[0];\n"
"	if (mkdir(\"$ROOT$dir\", 0777)) {\n"
"	        print($COMPLETE);\n"
"	} else {\n"
"		print($EPERM);\n"
"	}\n"
"}\n"
"sub s_rmdir()\n"
"{\n"
"	my $args = $_[0];\n"
"	my $dir = $$args[0];\n"
"	if (not -d \"$ROOT$dir\") {\n"
"		print($ENOENT);\n"
"		return;\n"
"	}\n"
"	if (rmdir(\"$ROOT$dir\")) {\n"
"		print($COMPLETE);\n"
"	} else {\n"
"		print($EPERM);\n"
"	}\n"
"}\n"
"sub s_mv()\n"
"{\n"
"	my $args = $_[0];\n"
"	my ($file1, $file2) = ($$args[0], $$args[1]);\n"
"	if (rename(\"$ROOT$file1\", \"$ROOT$file2\")) {\n"
"		print($COMPLETE);\n"
"	} elsif (-e \"$ROOT$file1\") {\n"
"		print($EPERM);\n"
"	} else {\n"
"		print($ENOENT);\n"
"	}\n"
"}\n"
"sub s_rm()\n"
"{\n"
"	my $args = $_[0];\n"
"	my $file = $$args[0];\n"
"	if (unlink(\"$ROOT$file\")) {\n"
"		print($COMPLETE);\n"
"	} elsif (-e \"$ROOT$file\") {\n"
"		print($EPERM);\n"
"	} else {\n"
"		print($ENOENT);\n"
"	}\n"
"}\n"
"sub s_creat()\n"
"{\n"
"	my $args = $_[0];\n"
"	my ($file, $mode) = ($$args[0], $$args[1]);\n"
"	\n"
"	if (sysopen(FD, \"$ROOT$file\", O_RDWR|O_TRUNC|O_CREAT, oct($mode))) {\n"
"		close FD;\n"
"		print($COMPLETE);\n"
"	} else {\n"
"		print($EPERM);\n"
"	}\n"
"}\n"
"sub s_ln()\n"
"{\n"
"	my $args = $_[0];\n"
"	my ($file1, $file2) = ($$args[0], $$args[1]);\n"
"	\n"
"	if (link(\"$ROOT$file1\", \"$ROOT$file2\")) {\n"
"		print($COMPLETE);\n"
"	} else {\n"
"		print($EPERM);\n"
"	}\n"
"}\n"
"sub s_sln()\n"
"{\n"
"	my $args = $_[0];\n"
"	my ($file1, $file2) = ($$args[0], $$args[1]);\n"
"	\n"
"	if (symlink(\"$file1\", \"$ROOT$file2\")) {\n"
"		print($COMPLETE);\n"
"	} else {\n"
"		print($EPERM);\n"
"	}\n"
"}\n"
"sub s_readlink()\n"
"{\n"
"	my $args = $_[0];\n"
"	my $file = $$args[0];\n"
"	my $result;\n"
"	if ($result = readlink(\"$ROOT$file\")) {\n"
"		print(\"$result\\n\");\n"
"		print($COMPLETE);\n"
"	} else {\n"
"		print($EPERM);\n"
"	}\n"
"}\n"
"sub s_chmod()\n"
"{\n"
"	my $args = $_[0];\n"
"	my ($file, $mode) = ($$args[0], $$args[1]);\n"
"	\n"
"	if (chmod(oct($mode), \"$ROOT$file\")) {\n"
"		print($COMPLETE);\n"
"	} else {\n"
"		print($EPERM);\n"
"	}\n"
"}\n"
"sub s_chown()\n"
"{\n"
"	my $args = $_[0];\n"
"	my ($file, $user) = ($$args[0], $$args[1]);\n"
"	\n"
"	if (chown($user, -1, \"$ROOT$file\")) {\n"
"		print($COMPLETE);\n"
"	} else {\n"
"		print($EPERM);\n"
"	}\n"
"}\n"
"sub s_chgrp()\n"
"{\n"
"	my $args = $_[0];\n"
"	my ($file, $group) = ($$args[0], $$args[1]);\n"
"	\n"
"	if (chown(-1, $group, \"$ROOT$file\")) {\n"
"		print($COMPLETE);\n"
"	} else {\n"
"		print($EPERM);\n"
"	}\n"
"}\n"
"sub s_trunc()\n"
"{\n"
"	my $args = $_[0];\n"
"	my ($file, $size) = ($$args[0], $$args[1]);\n"
"	if (truncate(\"$ROOT$file\", $size)) {\n"
"		print($COMPLETE);\n"
"	} else {\n"
"		print($EPERM);\n"
"	}\n"
"}\n"
"sub s_settime()\n"
"{\n"
"	my $args = $_[0];\n"
"	my ($file, $type, $time) = ($$args[0], $$args[1], $$args[2]);\n"
"	my ($atime, $mtime, $sec);\n"
"	$time =~ /(.{4})(..)(..)(..)(..)\\.(..)/;\n"
"	$sec = mktime($6, $5, $4, $3, $2-1, $1-1900);\n"
"	$mtime = $atime = $sec;\n"
"	if ($type eq \"a\" or \"$type\" eq \"m\") {\n"
"		my @attr = stat(\"$ROOT$file\");\n"
"		$mtime = $attr[9] if ($type eq \"a\");\n"
"		$atime = $attr[8] if ($type eq \"m\");\n"
"	}\n"
"	if (utime($atime, $mtime, \"$ROOT$file\")) {\n"
"		print($COMPLETE);\n"
"	} else {\n"
"		print($EPERM);\n"
"	}\n"
"}\n"
"sub s_statfs()\n"
"{\n"
"	my ($result, $line, $last, @list);\n"
"	$result = \"0 0 0\";\n"
"	if (open(FD, \"LC_ALL=POSIX df -k $ROOT 2>/dev/null|\")) {\n"
"		$last = \"\";\n"
"		while ($line = <FD>) {\n"
"			$last = $line;\n"
"		}\n"
"		close FD;\n"
"		chomp($last);\n"
"		@list = split(/ +/, $last);\n"
"		$result = \"$list[1] $list[2] $list[3]\";\n"
"	}\n"
"	print(\"$result\\n\");\n"
"	print($COMPLETE);\n"
"}\n"
"sub s_ping()\n"
"{\n"
"	my $args = $_[0];\n"
"	my $seq = $$args[0];\n"
"	\n"
"	print($PRELIM);\n"
"	print $seq.\"\\n\";\n"
"	print($NOP);\n"
"}\n"
"sub getline()\n"
"{\n"
"	my @args;\n"
"	my ($i, $c, $str, $state);\n"
"	$state = 0; $i = 0; $str = \"\";\n"
"	$c = getc(STDIN);\n"
"	while (1) {\n"
"		if (not defined $c) {\n"
"			return @args if (@args);\n"
"			exit(0);\n"
"		}\n"
"		if ($state == 0) {\n"
"			if ($c eq \"\\n\") { return @args; }\n"
"			elsif ($c eq \"'\\''\") { $state = 2; }\n"
"			elsif ($c ne \" \") { $str = $c; $state = 1; }\n"
"		} elsif ($state == 1) {\n"
"			if ($c eq \"\\n\") { $args[$i] = $str; return @args; }\n"
"			elsif ($c eq \" \") { $args[$i++] = $str; $str = \"\"; $state = 0; }\n"
"			else { $str = $str.$c; }\n"
"		} elsif ($state == 2) {\n"
"			if ($c eq \"'\\''\") { $state = 3; }\n"
"			else { $str = $str.$c; }\n"
"		} elsif ($state == 3) {\n"
"			if ($c eq \"\\n\") { $args[$i] = $str; return @args; }\n"
"			elsif ($c eq \" \") { $args[$i++] = $str; $str = \"\"; $state = 0; }\n"
"			elsif ($c eq \"'\\''\") { $state = 2; }\n"
"			elsif ($c eq \"\\\\\") { $state = 4; }\n"
"		} elsif ($state == 4) {\n"
"			if ($c eq \"\\n\") { $args[$i] = $str; return @args; }\n"
"			elsif ($c eq \" \") { $args[$i++] = $str; $str = \"\"; $state = 0; }\n"
"			elsif ($c eq \"'\\''\") { $str = $str.$c; $state = 0; }\n"
"		}\n"
"		$c = getc(STDIN);\n"
"	}\n"
"	return @args;\n"
"}\n"
"my $old_groups = \"\";\n"
"select STDOUT; $| = 1;\n"
"open(STDERR, \">/dev/null\");\n"
"print($COMPLETE);\n"
"while (1) {\n"
"	my @args = &getline();\n"
"	my ($cmd, $uid, $groups);\n"
"	next if (not @args);\n"
"	$cmd = shift @args;\n"
"	if ($PRESERVE) {\n"
"		$uid = shift @args;\n"
"		$groups = shift @args;\n"
"		if ($groups ne $old_groups) {\n"
"		        if (index($groups, \" \") == -1) {\n"
"				$groups = \"$groups $groups\";\n"
"			}\n"
"			$> = 0;\n"
"			$) = $old_groups = $groups;\n"
"		}\n"
"		$> = $uid if ($uid != $>);\n"
"	}\n"
"	if ($cmd eq \"s_init\") {\n"
"		&s_init(\\@args);\n"
"	} elsif ($cmd eq \"s_finish\") {\n"
"		&s_finish(\\@args);\n"
"	} elsif ($cmd eq \"s_lsdir\") {\n"
"		&s_lsdir(\\@args);\n"
"	} elsif ($cmd eq \"s_stat\") {\n"
"		&s_stat(\\@args);\n"
"	} elsif ($cmd eq \"s_open\") {\n"
"		&s_open(\\@args);\n"
"	} elsif ($cmd eq \"s_read\") {\n"
"		&s_read(\\@args);\n"
"	} elsif ($cmd eq \"s_sread\") {\n"
"		&s_sread(\\@args);\n"
"	} elsif ($cmd eq \"s_write\") {\n"
"		&s_write(\\@args);\n"
"	} elsif ($cmd eq \"s_mkdir\") {\n"
"		&s_mkdir(\\@args);\n"
"	} elsif ($cmd eq \"s_rmdir\") {\n"
"		&s_rmdir(\\@args);\n"
"	} elsif ($cmd eq \"s_mv\") {\n"
"		&s_mv(\\@args);\n"
"	} elsif ($cmd eq \"s_rm\") {\n"
"		&s_rm(\\@args);\n"
"	} elsif ($cmd eq \"s_creat\") {\n"
"		&s_creat(\\@args);\n"
"	} elsif ($cmd eq \"s_ln\") {\n"
"		&s_ln(\\@args);\n"
"	} elsif ($cmd eq \"s_sln\") {\n"
"		&s_sln(\\@args);\n"
"	} elsif ($cmd eq \"s_readlink\") {\n"
"		&s_readlink(\\@args);\n"
"	} elsif ($cmd eq \"s_chmod\") {\n"
"		&s_chmod(\\@args);\n"
"	} elsif ($cmd eq \"s_chown\") {\n"
"		&s_chown(\\@args);\n"
"	} elsif ($cmd eq \"s_chgrp\") {\n"
"		&s_chgrp(\\@args);\n"
"	} elsif ($cmd eq \"s_trunc\") {\n"
"		&s_trunc(\\@args);\n"
"	} elsif ($cmd eq \"s_settime\") {\n"
"		&s_settime(\\@args);\n"
"	} elsif ($cmd eq \"s_statfs\") {\n"
"		&s_statfs(\\@args);\n"
"	} elsif ($cmd eq \"s_ping\") {\n"
"		&s_ping(\\@args);\n"
"	} else {\n"
"		print($ERROR);\n"
"	}\n"
"}\n"
